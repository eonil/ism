// Note: Generated by AI assistant
use ism::text::Message;
use std::collections::HashMap;

#[test]
fn test_nested_empty() {
    let msg = Message::List(vec![
        Message::List(vec![]),
        Message::Table(HashMap::new()),
        Message::Text("".to_string()),
    ]);
    let json = serde_json::to_string(&msg).unwrap();
    assert_eq!(json, r#"[[],{},""]"#);
}

#[test]
fn test_unicode_strings() {
    let msg = Message::Text("ì•ˆë…•í•˜ì„¸ìš”ðŸ¦€".to_string());
    let json = serde_json::to_string(&msg).unwrap();
    assert_eq!(json, r#""ì•ˆë…•í•˜ì„¸ìš”ðŸ¦€""#);
}

#[test]
fn test_escaped_strings() {
    let msg = Message::Text("hello\n\"world\"".to_string());
    let json = serde_json::to_string(&msg).unwrap();
    assert_eq!(json, r#""hello\n\"world\"""#);
} 